AbsDefs 1:1-17:12:
  AbsTypeDef 1:1-1:17: int
    #typed as INTEGER
    AbsAtomType 1:11-1:17: INTEGER
      #typed as INTEGER
  AbsVarDef 3:1-3:17: GLOBAL1
    #typed as INTEGER
    #accesed as VAR(GLOBAL1: label=_GLOBAL1)
    AbsTypeName 3:15-3:17: int
      #defined at 1:1-1:17
      #typed as INTEGER
  AbsVarDef 4:1-4:17: GLOBAL2
    #typed as INTEGER
    #accesed as VAR(GLOBAL2: label=_GLOBAL2)
    AbsTypeName 4:15-4:17: int
      #defined at 1:1-1:17
      #typed as INTEGER
  AbsFunDef 6:1-10:25: neki1
    #typed as FUN(INTEGER,INTEGER:INTEGER)
    #framed as FRAME(neki1: level=1,label=_neki1,sizeLocs=4,sizeArgs=12,size=24,FP=T0,RV=T1)
    AbsPar 6:12-6:22: x
      #typed as INTEGER
      #accesed as PAR(x: offset=4)
      AbsAtomType 6:16-6:22: INTEGER
        #typed as INTEGER
    AbsPar 6:25-6:35: y
      #typed as INTEGER
      #accesed as PAR(y: offset=8)
      AbsAtomType 6:29-6:35: INTEGER
        #typed as INTEGER
    AbsAtomType 6:40-6:46: INTEGER
      #typed as INTEGER
    AbsWhere 8:5-10:25:
      #typed as INTEGER
      AbsExprs 7:6-7:78:
        #typed as INTEGER
        AbsIfThenElse 7:7-7:59:
          #typed as INTEGER
          AbsBinExpr 7:10-7:34: LTH
            #typed as LOGICAL
            AbsBinExpr 7:10-7:20: ADD
              #typed as INTEGER
              AbsVarName 7:10-7:10: x
                #defined at 6:12-6:22
                #typed as INTEGER
              AbsVarName 7:14-7:20: GLOBAL1
                #defined at 3:1-3:17
                #typed as INTEGER
            AbsBinExpr 7:24-7:34: ADD
              #typed as INTEGER
              AbsVarName 7:24-7:24: y
                #defined at 6:25-6:35
                #typed as INTEGER
              AbsVarName 7:28-7:34: GLOBAL2
                #defined at 4:1-4:17
                #typed as INTEGER
          AbsBinExpr 7:42-7:53: ASSIGN
            #typed as INTEGER
            AbsVarName 7:42-7:42: z
              #defined at 10:13-10:23
              #typed as INTEGER
            AbsFunCall 7:46-7:53: foo
              #defined at 8:12-8:63
              #typed as INTEGER
              AbsVarName 7:50-7:50: x
                #defined at 6:12-6:22
                #typed as INTEGER
              AbsVarName 7:52-7:52: y
                #defined at 6:25-6:35
                #typed as INTEGER
          AbsBinExpr 7:62-7:73: ASSIGN
            #typed as INTEGER
            AbsVarName 7:62-7:62: z
              #defined at 10:13-10:23
              #typed as INTEGER
            AbsFunCall 7:66-7:73: bar
              #defined at 9:13-9:64
              #typed as INTEGER
              AbsVarName 7:70-7:70: y
                #defined at 6:25-6:35
                #typed as INTEGER
              AbsVarName 7:72-7:72: x
                #defined at 6:12-6:22
                #typed as INTEGER
        AbsVarName 7:78-7:78: z
          #defined at 10:13-10:23
          #typed as INTEGER
      AbsDefs 8:12-10:23:
        AbsFunDef 8:12-8:63: foo
          #typed as FUN(INTEGER,INTEGER:INTEGER)
          #framed as FRAME(foo: level=2,label=L0,sizeLocs=0,sizeArgs=0,size=8,FP=T2,RV=T3)
          AbsPar 8:20-8:30: a
            #typed as INTEGER
            #accesed as PAR(a: offset=4)
            AbsAtomType 8:24-8:30: INTEGER
              #typed as INTEGER
          AbsPar 8:33-8:43: b
            #typed as INTEGER
            #accesed as PAR(b: offset=8)
            AbsAtomType 8:37-8:43: INTEGER
              #typed as INTEGER
          AbsAtomType 8:48-8:54: INTEGER
            #typed as INTEGER
          AbsBinExpr 8:58-8:62: MUL
            #typed as INTEGER
            AbsVarName 8:58-8:58: a
              #defined at 8:20-8:30
              #typed as INTEGER
            AbsVarName 8:62-8:62: b
              #defined at 8:33-8:43
              #typed as INTEGER
        AbsFunDef 9:13-9:64: bar
          #typed as FUN(INTEGER,INTEGER:INTEGER)
          #framed as FRAME(bar: level=2,label=L1,sizeLocs=0,sizeArgs=0,size=8,FP=T4,RV=T5)
          AbsPar 9:21-9:31: a
            #typed as INTEGER
            #accesed as PAR(a: offset=4)
            AbsAtomType 9:25-9:31: INTEGER
              #typed as INTEGER
          AbsPar 9:34-9:44: b
            #typed as INTEGER
            #accesed as PAR(b: offset=8)
            AbsAtomType 9:38-9:44: INTEGER
              #typed as INTEGER
          AbsAtomType 9:49-9:55: INTEGER
            #typed as INTEGER
          AbsBinExpr 9:59-9:63: SUB
            #typed as INTEGER
            AbsVarName 9:59-9:59: a
              #defined at 9:21-9:31
              #typed as INTEGER
            AbsVarName 9:63-9:63: b
              #defined at 9:34-9:44
              #typed as INTEGER
        AbsVarDef 10:13-10:23: z
          #typed as INTEGER
          #accesed as LOC(z: offset=-4)
          AbsTypeName 10:21-10:23: int
            #defined at 1:1-1:17
            #typed as INTEGER
  AbsFunDef 12:1-12:92: zanka1
    #typed as FUN(INTEGER:INTEGER)
    #framed as FRAME(zanka1: level=1,label=_zanka1,sizeLocs=4,sizeArgs=0,size=12,FP=T6,RV=T7)
    AbsPar 12:12-12:18: x
      #typed as INTEGER
      #accesed as PAR(x: offset=4)
      AbsTypeName 12:16-12:18: int
        #defined at 1:1-1:17
        #typed as INTEGER
    AbsTypeName 12:23-12:25: int
      #defined at 1:1-1:17
      #typed as INTEGER
    AbsWhere 12:73-12:92:
      #typed as INTEGER
      AbsExprs 12:30-12:70:
        #typed as INTEGER
        AbsWhileName 12:31-12:64:
          #typed as VOID
          AbsBinExpr 12:37-12:41: GTH
            #typed as LOGICAL
            AbsVarName 12:37-12:37: x
              #defined at 12:12-12:18
              #typed as INTEGER
            AbsAtomConst 12:41-12:41: INTEGER(0)
              #typed as INTEGER
          AbsExprs 12:46-12:64:
            #typed as INTEGER
            AbsBinExpr 12:47-12:53: ASSIGN
              #typed as INTEGER
              AbsVarName 12:47-12:47: y
                #defined at 12:80-12:90
                #typed as INTEGER
              AbsBinExpr 12:51-12:53: ADD
                #typed as INTEGER
                AbsVarName 12:51-12:51: y
                  #defined at 12:80-12:90
                  #typed as INTEGER
                AbsVarName 12:53-12:53: x
                  #defined at 12:12-12:18
                  #typed as INTEGER
            AbsBinExpr 12:58-12:64: ASSIGN
              #typed as INTEGER
              AbsVarName 12:58-12:58: x
                #defined at 12:12-12:18
                #typed as INTEGER
              AbsBinExpr 12:62-12:64: SUB
                #typed as INTEGER
                AbsVarName 12:62-12:62: x
                  #defined at 12:12-12:18
                  #typed as INTEGER
                AbsAtomConst 12:64-12:64: INTEGER(1)
                  #typed as INTEGER
        AbsVarName 12:70-12:70: y
          #defined at 12:80-12:90
          #typed as INTEGER
      AbsDefs 12:80-12:90:
        AbsVarDef 12:80-12:90: y
          #typed as INTEGER
          #accesed as LOC(y: offset=-4)
          AbsTypeName 12:88-12:90: int
            #defined at 1:1-1:17
            #typed as INTEGER
  AbsFunDef 13:1-13:96: zanka2
    #typed as FUN(INTEGER:INTEGER)
    #framed as FRAME(zanka2: level=1,label=_zanka2,sizeLocs=8,sizeArgs=0,size=16,FP=T8,RV=T9)
    AbsPar 13:12-13:18: x
      #typed as INTEGER
      #accesed as PAR(x: offset=4)
      AbsTypeName 13:16-13:18: int
        #defined at 1:1-1:17
        #typed as INTEGER
    AbsTypeName 13:23-13:25: int
      #defined at 1:1-1:17
      #typed as INTEGER
    AbsWhere 13:64-13:96:
      #typed as INTEGER
      AbsExprs 13:30-13:61:
        #typed as INTEGER
        AbsFor 13:31-13:56:
          #typed as VOID
          AbsVarName 13:31-13:33: i
            #defined at 13:84-13:94
            #typed as INTEGER
          AbsAtomConst 13:39-13:39: INTEGER(0)
            #typed as INTEGER
          AbsVarName 13:42-13:42: x
            #defined at 13:12-13:18
            #typed as INTEGER
          AbsAtomConst 13:45-13:45: INTEGER(1)
            #typed as INTEGER
          AbsBinExpr 13:50-13:56: ASSIGN
            #typed as INTEGER
            AbsVarName 13:50-13:50: y
              #defined at 13:71-13:81
              #typed as INTEGER
            AbsBinExpr 13:54-13:56: ADD
              #typed as INTEGER
              AbsVarName 13:54-13:54: y
                #defined at 13:71-13:81
                #typed as INTEGER
              AbsVarName 13:56-13:56: x
                #defined at 13:12-13:18
                #typed as INTEGER
        AbsVarName 13:61-13:61: y
          #defined at 13:71-13:81
          #typed as INTEGER
      AbsDefs 13:71-13:94:
        AbsVarDef 13:71-13:81: y
          #typed as INTEGER
          #accesed as LOC(y: offset=-4)
          AbsTypeName 13:79-13:81: int
            #defined at 1:1-1:17
            #typed as INTEGER
        AbsVarDef 13:84-13:94: i
          #typed as INTEGER
          #accesed as LOC(i: offset=-8)
          AbsTypeName 13:92-13:94: int
            #defined at 1:1-1:17
            #typed as INTEGER
  AbsFunDef 15:1-17:12: main
    #typed as FUN(INTEGER:INTEGER)
    #framed as FRAME(main: level=1,label=_main,sizeLocs=0,sizeArgs=12,size=20,FP=T10,RV=T11)
    AbsPar 15:10-15:18: arg
      #typed as INTEGER
      #accesed as PAR(arg: offset=4)
      AbsTypeName 15:16-15:18: int
        #defined at 1:1-1:17
        #typed as INTEGER
    AbsTypeName 15:23-15:25: int
      #defined at 1:1-1:17
      #typed as INTEGER
    AbsExprs 15:30-15:62:
      #typed as INTEGER
      AbsFunCall 15:30-15:40: neki1
        #defined at 6:1-10:25
        #typed as INTEGER
        AbsAtomConst 15:36-15:36: INTEGER(5)
          #typed as INTEGER
        AbsAtomConst 15:39-15:39: INTEGER(9)
          #typed as INTEGER
      AbsFunCall 15:43-15:51: zanka1
        #defined at 12:1-12:92
        #typed as INTEGER
        AbsAtomConst 15:50-15:50: INTEGER(5)
          #typed as INTEGER
      AbsFunCall 15:54-15:62: zanka2
        #defined at 13:1-13:96
        #typed as INTEGER
        AbsAtomConst 15:61-15:61: INTEGER(9)
          #typed as INTEGER
DATA CHUNK: label=_GLOBAL1 size=4
DATA CHUNK: label=_GLOBAL2 size=4
CODE CHUNK: label=L0
  FRAME(foo: level=2,label=L0,sizeLocs=0,sizeArgs=0,size=8,FP=T2,RV=T3)
  SEQ
    MOVE
      BINOP op=*
        MEM
          BINOP op=+
            TEMP name=T2
            CONST value=4
        MEM
          BINOP op=+
            TEMP name=T2
            CONST value=8
      TEMP name=T3
CODE CHUNK: label=L1
  FRAME(bar: level=2,label=L1,sizeLocs=0,sizeArgs=0,size=8,FP=T4,RV=T5)
  SEQ
    MOVE
      BINOP op=-
        MEM
          BINOP op=+
            TEMP name=T4
            CONST value=4
        MEM
          BINOP op=+
            TEMP name=T4
            CONST value=8
      TEMP name=T5
CODE CHUNK: label=_neki1
  FRAME(neki1: level=1,label=_neki1,sizeLocs=4,sizeArgs=12,size=24,FP=T0,RV=T1)
  SEQ
    CJUMP labels=L3,L6
      BINOP op=<
        BINOP op=+
          MEM
            BINOP op=+
              TEMP name=T0
              CONST value=4
          MEM
            NAME label=_GLOBAL1
        BINOP op=+
          MEM
            BINOP op=+
              TEMP name=T0
              CONST value=8
          MEM
            NAME label=_GLOBAL2
    LABEL label=L6
    JUMP label=L5
    LABEL label=L5
    JUMP label=L2
    LABEL label=L2
    MOVE
      TEMP name=T12
      MEM
        TEMP name=T0
    MOVE
      TEMP name=T13
      MEM
        BINOP op=+
          TEMP name=T0
          CONST value=8
    MOVE
      TEMP name=T14
      MEM
        BINOP op=+
          TEMP name=T0
          CONST value=4
    MOVE
      TEMP name=T28
      TEMP name=T12
    MOVE
      TEMP name=T29
      TEMP name=T13
    MOVE
      TEMP name=T30
      TEMP name=T14
    MOVE
      TEMP name=T31
      CALL label=L1
        TEMP name=T28
        TEMP name=T29
        TEMP name=T30
    MOVE
      TEMP name=T15
      TEMP name=T31
    MOVE
      MEM
        BINOP op=+
          TEMP name=T0
          CONST value=-4
      TEMP name=T15
    MOVE
      TEMP name=T16
      MEM
        TEMP name=T0
    MOVE
      TEMP name=T17
      MEM
        BINOP op=+
          TEMP name=T0
          CONST value=8
    MOVE
      TEMP name=T18
      MEM
        BINOP op=+
          TEMP name=T0
          CONST value=4
    MOVE
      TEMP name=T32
      TEMP name=T16
    MOVE
      TEMP name=T33
      TEMP name=T17
    MOVE
      TEMP name=T34
      TEMP name=T18
    MOVE
      TEMP name=T35
      CALL label=L1
        TEMP name=T32
        TEMP name=T33
        TEMP name=T34
    MOVE
      TEMP name=T19
      TEMP name=T35
    EXP
      TEMP name=T19
    JUMP label=L4
    LABEL label=L3
    MOVE
      TEMP name=T20
      MEM
        TEMP name=T0
    MOVE
      TEMP name=T21
      MEM
        BINOP op=+
          TEMP name=T0
          CONST value=4
    MOVE
      TEMP name=T22
      MEM
        BINOP op=+
          TEMP name=T0
          CONST value=8
    MOVE
      TEMP name=T36
      TEMP name=T20
    MOVE
      TEMP name=T37
      TEMP name=T21
    MOVE
      TEMP name=T38
      TEMP name=T22
    MOVE
      TEMP name=T39
      CALL label=L0
        TEMP name=T36
        TEMP name=T37
        TEMP name=T38
    MOVE
      TEMP name=T23
      TEMP name=T39
    MOVE
      MEM
        BINOP op=+
          TEMP name=T0
          CONST value=-4
      TEMP name=T23
    MOVE
      TEMP name=T24
      MEM
        TEMP name=T0
    MOVE
      TEMP name=T25
      MEM
        BINOP op=+
          TEMP name=T0
          CONST value=4
    MOVE
      TEMP name=T26
      MEM
        BINOP op=+
          TEMP name=T0
          CONST value=8
    MOVE
      TEMP name=T40
      TEMP name=T24
    MOVE
      TEMP name=T41
      TEMP name=T25
    MOVE
      TEMP name=T42
      TEMP name=T26
    MOVE
      TEMP name=T43
      CALL label=L0
        TEMP name=T40
        TEMP name=T41
        TEMP name=T42
    MOVE
      TEMP name=T27
      TEMP name=T43
    EXP
      TEMP name=T27
    LABEL label=L4
    MOVE
      MEM
        BINOP op=+
          TEMP name=T0
          CONST value=-4
      TEMP name=T1
CODE CHUNK: label=_zanka1
  FRAME(zanka1: level=1,label=_zanka1,sizeLocs=4,sizeArgs=0,size=12,FP=T6,RV=T7)
  SEQ
    CJUMP labels=L9,L12
      BINOP op=>
        MEM
          BINOP op=+
            TEMP name=T6
            CONST value=4
        CONST value=0
    LABEL label=L12
    JUMP label=L11
    LABEL label=L11
    JUMP label=L10
    LABEL label=L9
    MOVE
      MEM
        BINOP op=+
          TEMP name=T6
          CONST value=-4
      BINOP op=+
        MEM
          BINOP op=+
            TEMP name=T6
            CONST value=-4
        MEM
          BINOP op=+
            TEMP name=T6
            CONST value=4
    EXP
      BINOP op=+
        MEM
          BINOP op=+
            TEMP name=T6
            CONST value=-4
        MEM
          BINOP op=+
            TEMP name=T6
            CONST value=4
    MOVE
      MEM
        BINOP op=+
          TEMP name=T6
          CONST value=4
      BINOP op=-
        MEM
          BINOP op=+
            TEMP name=T6
            CONST value=4
        CONST value=1
    EXP
      BINOP op=-
        MEM
          BINOP op=+
            TEMP name=T6
            CONST value=4
        CONST value=1
    JUMP label=L8
    LABEL label=L10
    MOVE
      MEM
        BINOP op=+
          TEMP name=T6
          CONST value=-4
      TEMP name=T7
CODE CHUNK: label=_zanka2
  FRAME(zanka2: level=1,label=_zanka2,sizeLocs=8,sizeArgs=0,size=16,FP=T8,RV=T9)
  SEQ
    MOVE
      MEM
        TEMP name=T60
      CONST value=0
    LABEL label=L14
    CJUMP labels=L15,L17
      BINOP op=<=
        TEMP name=T60
        MEM
          BINOP op=+
            TEMP name=T8
            CONST value=4
    LABEL label=L17
    JUMP label=L16
    LABEL label=L15
    MOVE
      MEM
        BINOP op=+
          TEMP name=T8
          CONST value=-4
      BINOP op=+
        MEM
          BINOP op=+
            TEMP name=T8
            CONST value=-4
        MEM
          BINOP op=+
            TEMP name=T8
            CONST value=4
    EXP
      BINOP op=+
        MEM
          BINOP op=+
            TEMP name=T8
            CONST value=-4
        MEM
          BINOP op=+
            TEMP name=T8
            CONST value=4
    JUMP label=L14
    LABEL label=L16
    MOVE
      MEM
        BINOP op=+
          TEMP name=T8
          CONST value=-4
      TEMP name=T9
CODE CHUNK: label=_main
  FRAME(main: level=1,label=_main,sizeLocs=0,sizeArgs=12,size=20,FP=T10,RV=T11)
  SEQ
    MOVE
      TEMP name=T61
      MEM
        TEMP name=T10
    MOVE
      TEMP name=T62
      CONST value=5
    MOVE
      TEMP name=T63
      CONST value=9
    MOVE
      TEMP name=T64
      CALL label=_neki1
        TEMP name=T61
        TEMP name=T62
        TEMP name=T63
    EXP
      TEMP name=T64
    MOVE
      TEMP name=T65
      MEM
        TEMP name=T10
    MOVE
      TEMP name=T66
      CONST value=5
    MOVE
      TEMP name=T67
      CALL label=_zanka1
        TEMP name=T65
        TEMP name=T66
    EXP
      TEMP name=T67
    MOVE
      TEMP name=T68
      MEM
        TEMP name=T10
    MOVE
      TEMP name=T69
      CONST value=9
    MOVE
      TEMP name=T70
      CALL label=_zanka2
        TEMP name=T68
        TEMP name=T69
    MOVE
      TEMP name=T70
      TEMP name=T11
