AbsDefs 1:1-24:59:
  AbsVarDef 1:1-1:11: c
    #typed as INTEGER
    #accesed as VAR(c: label=_c)
    AbsTypeName 1:9-1:11: int
      #defined at 2:1-2:17
      #typed as INTEGER
  AbsTypeDef 2:1-2:17: int
    #typed as INTEGER
    AbsAtomType 2:11-2:17: INTEGER
      #typed as INTEGER
  AbsVarDef 4:1-4:14: s
    #typed as STRING
    #accesed as VAR(s: label=_s)
    AbsAtomType 4:9-4:14: STRING
      #typed as STRING
  AbsFunDef 6:1-6:34: add
    #typed as FUN(INTEGER,INTEGER:INTEGER)
    #framed as FRAME(add: level=0,label=_add,sizeLocs=0,sizeArgs=0,size=8,FP=T0,RV=T1)
    AbsPar 6:9-6:13: x
      #typed as INTEGER
      #accesed as PAR(x: offset=4)
      AbsTypeName 6:11-6:13: int
        #defined at 2:1-2:17
        #typed as INTEGER
    AbsPar 6:16-6:20: y
      #typed as INTEGER
      #accesed as PAR(y: offset=12)
      AbsTypeName 6:18-6:20: int
        #defined at 2:1-2:17
        #typed as INTEGER
    AbsTypeName 6:23-6:25: int
      #defined at 2:1-2:17
      #typed as INTEGER
    AbsExprs 6:30-6:32:
      #typed as INTEGER
      AbsBinExpr 6:30-6:32: ADD
        #typed as INTEGER
        AbsVarName 6:30-6:30: x
          #defined at 6:9-6:13
          #typed as INTEGER
        AbsVarName 6:32-6:32: y
          #defined at 6:16-6:20
          #typed as INTEGER
  AbsFunDef 8:1-8:54: f0
    #typed as FUN(INTEGER:INTEGER)
    #framed as FRAME(f0: level=0,label=_f0,sizeLocs=0,sizeArgs=8,size=16,FP=T2,RV=T3)
    AbsPar 8:8-8:12: x
      #typed as INTEGER
      #accesed as PAR(x: offset=4)
      AbsTypeName 8:10-8:12: int
        #defined at 2:1-2:17
        #typed as INTEGER
    AbsTypeName 8:15-8:17: int
      #defined at 2:1-2:17
      #typed as INTEGER
    AbsWhere 8:26-8:54:
      #typed as INTEGER
      AbsFunCall 8:21-8:24: g
        #defined at 8:33-8:53
        #typed as INTEGER
        AbsVarName 8:23-8:23: x
          #defined at 8:8-8:12
          #typed as INTEGER
      AbsDefs 8:33-8:53:
        AbsFunDef 8:33-8:53: g
          #typed as FUN(INTEGER:INTEGER)
          #framed as FRAME(g: level=1,label=_g,sizeLocs=0,sizeArgs=0,size=8,FP=T4,RV=T5)
          AbsPar 8:39-8:43: y
            #typed as INTEGER
            #accesed as PAR(y: offset=4)
            AbsTypeName 8:41-8:43: int
              #defined at 2:1-2:17
              #typed as INTEGER
          AbsTypeName 8:46-8:48: int
            #defined at 2:1-2:17
            #typed as INTEGER
          AbsVarName 8:52-8:52: c
            #defined at 1:1-1:11
            #typed as INTEGER
  AbsFunDef 10:1-10:86: f1
    #typed as FUN(INTEGER:INTEGER)
    #framed as FRAME(f1: level=0,label=_f1,sizeLocs=0,sizeArgs=8,size=16,FP=T6,RV=T7)
    AbsPar 10:8-10:12: x
      #typed as INTEGER
      #accesed as PAR(x: offset=4)
      AbsTypeName 10:10-10:12: int
        #defined at 2:1-2:17
        #typed as INTEGER
    AbsTypeName 10:15-10:17: int
      #defined at 2:1-2:17
      #typed as INTEGER
    AbsWhere 10:26-10:86:
      #typed as INTEGER
      AbsFunCall 10:21-10:24: g
        #defined at 10:33-10:85
        #typed as INTEGER
        AbsVarName 10:23-10:23: x
          #defined at 10:8-10:12
          #typed as INTEGER
      AbsDefs 10:33-10:85:
        AbsFunDef 10:33-10:85: g
          #typed as FUN(INTEGER:INTEGER)
          #framed as FRAME(g: level=1,label=_g,sizeLocs=0,sizeArgs=8,size=16,FP=T8,RV=T9)
          AbsPar 10:39-10:43: y
            #typed as INTEGER
            #accesed as PAR(y: offset=4)
            AbsTypeName 10:41-10:43: int
              #defined at 2:1-2:17
              #typed as INTEGER
          AbsTypeName 10:46-10:48: int
            #defined at 2:1-2:17
            #typed as INTEGER
          AbsWhere 10:57-10:85:
            #typed as INTEGER
            AbsFunCall 10:52-10:55: h
              #defined at 10:64-10:84
              #typed as INTEGER
              AbsVarName 10:54-10:54: y
                #defined at 10:39-10:43
                #typed as INTEGER
            AbsDefs 10:64-10:84:
              AbsFunDef 10:64-10:84: h
                #typed as FUN(INTEGER:INTEGER)
                #framed as FRAME(h: level=2,label=_h,sizeLocs=0,sizeArgs=0,size=8,FP=T10,RV=T11)
                AbsPar 10:70-10:74: z
                  #typed as INTEGER
                  #accesed as PAR(z: offset=4)
                  AbsTypeName 10:72-10:74: int
                    #defined at 2:1-2:17
                    #typed as INTEGER
                AbsTypeName 10:77-10:79: int
                  #defined at 2:1-2:17
                  #typed as INTEGER
                AbsVarName 10:83-10:83: z
                  #defined at 10:70-10:74
                  #typed as INTEGER
  AbsFunDef 12:1-12:84: f2
    #typed as FUN(INTEGER:INTEGER)
    #framed as FRAME(f2: level=0,label=_f2,sizeLocs=8,sizeArgs=8,size=24,FP=T12,RV=T13)
    AbsPar 12:8-12:12: x
      #typed as INTEGER
      #accesed as PAR(x: offset=4)
      AbsTypeName 12:10-12:12: int
        #defined at 2:1-2:17
        #typed as INTEGER
    AbsTypeName 12:15-12:17: int
      #defined at 2:1-2:17
      #typed as INTEGER
    AbsWhere 12:56-12:84:
      #typed as INTEGER
      AbsExprs 12:22-12:52:
        #typed as INTEGER
        AbsBinExpr 12:23-12:25: ASSIGN
          #typed as INTEGER
          AbsVarName 12:23-12:23: a
            #defined at 12:63-12:71
            #typed as INTEGER
          AbsAtomConst 12:25-12:25: INTEGER(1)
            #typed as INTEGER
        AbsBinExpr 12:29-12:31: ASSIGN
          #typed as INTEGER
          AbsVarName 12:29-12:29: b
            #defined at 12:74-12:82
            #typed as INTEGER
          AbsAtomConst 12:31-12:31: INTEGER(2)
            #typed as INTEGER
        AbsBinExpr 12:35-12:37: ASSIGN
          #typed as INTEGER
          AbsVarName 12:35-12:35: c
            #defined at 1:1-1:11
            #typed as INTEGER
          AbsAtomConst 12:37-12:37: INTEGER(3)
            #typed as INTEGER
        AbsExprs 12:42-12:52:
          #typed as INTEGER
          AbsBinExpr 12:42-12:52: ADD
            #typed as INTEGER
            AbsBinExpr 12:42-12:46: ADD
              #typed as INTEGER
              AbsBinExpr 12:42-12:44: ADD
                #typed as INTEGER
                AbsVarName 12:42-12:42: a
                  #defined at 12:63-12:71
                  #typed as INTEGER
                AbsVarName 12:44-12:44: b
                  #defined at 12:74-12:82
                  #typed as INTEGER
              AbsVarName 12:46-12:46: c
                #defined at 1:1-1:11
                #typed as INTEGER
            AbsFunCall 12:48-12:52: f1
              #defined at 10:1-10:86
              #typed as INTEGER
              AbsVarName 12:51-12:51: a
                #defined at 12:63-12:71
                #typed as INTEGER
      AbsDefs 12:63-12:82:
        AbsVarDef 12:63-12:71: a
          #typed as INTEGER
          #accesed as LOC(a: offset=-4)
          AbsTypeName 12:69-12:71: int
            #defined at 2:1-2:17
            #typed as INTEGER
        AbsVarDef 12:74-12:82: b
          #typed as INTEGER
          #accesed as LOC(b: offset=-8)
          AbsTypeName 12:80-12:82: int
            #defined at 2:1-2:17
            #typed as INTEGER
  AbsFunDef 14:1-14:56: f3
    #typed as FUN(INTEGER,INTEGER,INTEGER:INTEGER)
    #framed as FRAME(f3: level=0,label=_f3,sizeLocs=0,sizeArgs=8,size=16,FP=T14,RV=T15)
    AbsPar 14:8-14:12: x
      #typed as INTEGER
      #accesed as PAR(x: offset=4)
      AbsTypeName 14:10-14:12: int
        #defined at 2:1-2:17
        #typed as INTEGER
    AbsPar 14:14-14:18: y
      #typed as INTEGER
      #accesed as PAR(y: offset=12)
      AbsTypeName 14:16-14:18: int
        #defined at 2:1-2:17
        #typed as INTEGER
    AbsPar 14:20-14:24: z
      #typed as INTEGER
      #accesed as PAR(z: offset=20)
      AbsTypeName 14:22-14:24: int
        #defined at 2:1-2:17
        #typed as INTEGER
    AbsTypeName 14:27-14:29: int
      #defined at 2:1-2:17
      #typed as INTEGER
    AbsExprs 14:34-14:54:
      #typed as INTEGER
      AbsBinExpr 14:34-14:54: ADD
        #typed as INTEGER
        AbsBinExpr 14:34-14:46: ADD
          #typed as INTEGER
          AbsFunCall 14:34-14:38: f2
            #defined at 12:1-12:84
            #typed as INTEGER
            AbsVarName 14:37-14:37: x
              #defined at 14:8-14:12
              #typed as INTEGER
          AbsFunCall 14:42-14:46: f2
            #defined at 12:1-12:84
            #typed as INTEGER
            AbsVarName 14:45-14:45: y
              #defined at 14:14-14:18
              #typed as INTEGER
        AbsFunCall 14:50-14:54: f2
          #defined at 12:1-12:84
          #typed as INTEGER
          AbsVarName 14:53-14:53: z
            #defined at 14:20-14:24
            #typed as INTEGER
  AbsFunDef 16:1-16:82: f4
    #typed as FUN(INTEGER:INTEGER)
    #framed as FRAME(f4: level=0,label=_f4,sizeLocs=8,sizeArgs=16,size=32,FP=T16,RV=T17)
    AbsPar 16:8-16:12: p
      #typed as INTEGER
      #accesed as PAR(p: offset=4)
      AbsTypeName 16:10-16:12: int
        #defined at 2:1-2:17
        #typed as INTEGER
    AbsTypeName 16:15-16:17: int
      #defined at 2:1-2:17
      #typed as INTEGER
    AbsWhere 16:54-16:82:
      #typed as INTEGER
      AbsExprs 16:22-16:50:
        #typed as INTEGER
        AbsBinExpr 16:23-16:25: ASSIGN
          #typed as INTEGER
          AbsVarName 16:23-16:23: a
            #defined at 16:61-16:69
            #typed as INTEGER
          AbsAtomConst 16:25-16:25: INTEGER(4)
            #typed as INTEGER
        AbsBinExpr 16:29-16:31: ASSIGN
          #typed as INTEGER
          AbsVarName 16:29-16:29: b
            #defined at 16:72-16:80
            #typed as INTEGER
          AbsAtomConst 16:31-16:31: INTEGER(5)
            #typed as INTEGER
        AbsBinExpr 16:35-16:37: ASSIGN
          #typed as INTEGER
          AbsVarName 16:35-16:35: c
            #defined at 1:1-1:11
            #typed as INTEGER
          AbsAtomConst 16:37-16:37: INTEGER(6)
            #typed as INTEGER
        AbsExprs 16:42-16:50:
          #typed as INTEGER
          AbsFunCall 16:42-16:50: f3
            #defined at 14:1-14:56
            #typed as INTEGER
            AbsVarName 16:45-16:45: a
              #defined at 16:61-16:69
              #typed as INTEGER
            AbsVarName 16:47-16:47: b
              #defined at 16:72-16:80
              #typed as INTEGER
            AbsVarName 16:49-16:49: c
              #defined at 1:1-1:11
              #typed as INTEGER
      AbsDefs 16:61-16:80:
        AbsVarDef 16:61-16:69: a
          #typed as INTEGER
          #accesed as LOC(a: offset=-4)
          AbsTypeName 16:67-16:69: int
            #defined at 2:1-2:17
            #typed as INTEGER
        AbsVarDef 16:72-16:80: b
          #typed as INTEGER
          #accesed as LOC(b: offset=-8)
          AbsTypeName 16:78-16:80: int
            #defined at 2:1-2:17
            #typed as INTEGER
  AbsFunDef 24:1-24:59: f7
    #typed as FUN(INTEGER:INTEGER)
    #framed as FRAME(f7: level=0,label=_f7,sizeLocs=0,sizeArgs=0,size=8,FP=T18,RV=T19)
    AbsPar 24:8-24:12: x
      #typed as INTEGER
      #accesed as PAR(x: offset=4)
      AbsTypeName 24:10-24:12: int
        #defined at 2:1-2:17
        #typed as INTEGER
    AbsTypeName 24:15-24:17: int
      #defined at 2:1-2:17
      #typed as INTEGER
    AbsExprs 24:22-24:58:
      #typed as INTEGER
      AbsBinExpr 24:23-24:27: ASSIGN
        #typed as INTEGER
        AbsVarName 24:23-24:23: c
          #defined at 1:1-1:11
          #typed as INTEGER
        AbsAtomConst 24:27-24:27: INTEGER(3)
          #typed as INTEGER
      AbsIfThenElse 24:31-24:51:
        #typed as INTEGER
        AbsBinExpr 24:34-24:39: EQU
          #typed as LOGICAL
          AbsVarName 24:34-24:34: c
            #defined at 1:1-1:11
            #typed as INTEGER
          AbsAtomConst 24:39-24:39: INTEGER(3)
            #typed as INTEGER
        AbsAtomConst 24:46-24:46: INTEGER(1)
          #typed as INTEGER
        AbsAtomConst 24:53-24:53: INTEGER(0)
          #typed as INTEGER
      AbsAtomConst 24:57-24:58: INTEGER(30)
        #typed as INTEGER
DATA CHUNK: label=_c size=4
DATA CHUNK: label=_s size=4
CODE CHUNK: label=_add
  FRAME(add: level=0,label=_add,sizeLocs=0,sizeArgs=0,size=8,FP=T0,RV=T1)
  MOVE
    ESEQ
      SEQ
      BINOP op=+
        MEM
          BINOP op=<=
            TEMP name=T0
            CONST value=4
        MEM
          BINOP op=<=
            TEMP name=T0
            CONST value=12
    TEMP name=T1
CODE CHUNK: label=_g
  FRAME(g: level=1,label=_g,sizeLocs=0,sizeArgs=0,size=8,FP=T4,RV=T5)
  MOVE
    MEM
      NAME label=_c
    TEMP name=T5
CODE CHUNK: label=_f0
  FRAME(f0: level=0,label=_f0,sizeLocs=0,sizeArgs=8,size=16,FP=T2,RV=T3)
  MOVE
    CALL label=_g
      MEM
        TEMP name=T2
      MEM
        BINOP op=<=
          TEMP name=T2
          CONST value=4
    TEMP name=T3
CODE CHUNK: label=_h
  FRAME(h: level=2,label=_h,sizeLocs=0,sizeArgs=0,size=8,FP=T10,RV=T11)
  MOVE
    MEM
      BINOP op=<=
        TEMP name=T10
        CONST value=4
    TEMP name=T11
CODE CHUNK: label=_g
  FRAME(g: level=1,label=_g,sizeLocs=0,sizeArgs=8,size=16,FP=T8,RV=T9)
  MOVE
    CALL label=_h
      MEM
        TEMP name=T8
      MEM
        BINOP op=<=
          TEMP name=T8
          CONST value=4
    TEMP name=T9
CODE CHUNK: label=_f1
  FRAME(f1: level=0,label=_f1,sizeLocs=0,sizeArgs=8,size=16,FP=T6,RV=T7)
  MOVE
    CALL label=_g
      MEM
        TEMP name=T6
      MEM
        BINOP op=<=
          TEMP name=T6
          CONST value=4
    TEMP name=T7
CODE CHUNK: label=_f2
  FRAME(f2: level=0,label=_f2,sizeLocs=8,sizeArgs=8,size=24,FP=T12,RV=T13)
  MOVE
    ESEQ
      SEQ
        EXP
          ESEQ
            MOVE
              MEM
                BINOP op=<=
                  TEMP name=T12
                  CONST value=-4
              CONST value=1
            CONST value=1
        EXP
          ESEQ
            MOVE
              MEM
                BINOP op=<=
                  TEMP name=T12
                  CONST value=-8
              CONST value=2
            CONST value=2
        EXP
          ESEQ
            MOVE
              MEM
                NAME label=_c
              CONST value=3
            CONST value=3
      ESEQ
        SEQ
        BINOP op=+
          BINOP op=+
            BINOP op=+
              MEM
                BINOP op=<=
                  TEMP name=T12
                  CONST value=-4
              MEM
                BINOP op=<=
                  TEMP name=T12
                  CONST value=-8
            MEM
              NAME label=_c
          CALL label=_f1
            CONST value=1100110011
            MEM
              BINOP op=<=
                TEMP name=T12
                CONST value=-4
    TEMP name=T13
CODE CHUNK: label=_f3
  FRAME(f3: level=0,label=_f3,sizeLocs=0,sizeArgs=8,size=16,FP=T14,RV=T15)
  MOVE
    ESEQ
      SEQ
      BINOP op=+
        BINOP op=+
          CALL label=_f2
            CONST value=1100110011
            MEM
              BINOP op=<=
                TEMP name=T14
                CONST value=4
          CALL label=_f2
            CONST value=1100110011
            MEM
              BINOP op=<=
                TEMP name=T14
                CONST value=12
        CALL label=_f2
          CONST value=1100110011
          MEM
            BINOP op=<=
              TEMP name=T14
              CONST value=20
    TEMP name=T15
CODE CHUNK: label=_f4
  FRAME(f4: level=0,label=_f4,sizeLocs=8,sizeArgs=16,size=32,FP=T16,RV=T17)
  MOVE
    ESEQ
      SEQ
        EXP
          ESEQ
            MOVE
              MEM
                BINOP op=<=
                  TEMP name=T16
                  CONST value=-4
              CONST value=4
            CONST value=4
        EXP
          ESEQ
            MOVE
              MEM
                BINOP op=<=
                  TEMP name=T16
                  CONST value=-8
              CONST value=5
            CONST value=5
        EXP
          ESEQ
            MOVE
              MEM
                NAME label=_c
              CONST value=6
            CONST value=6
      ESEQ
        SEQ
        CALL label=_f3
          CONST value=1100110011
          MEM
            BINOP op=<=
              TEMP name=T16
              CONST value=-4
          MEM
            BINOP op=<=
              TEMP name=T16
              CONST value=-8
          MEM
            NAME label=_c
    TEMP name=T17
CODE CHUNK: label=_f7
  FRAME(f7: level=0,label=_f7,sizeLocs=0,sizeArgs=0,size=8,FP=T18,RV=T19)
  MOVE
    ESEQ
      SEQ
        EXP
          ESEQ
            MOVE
              MEM
                NAME label=_c
              CONST value=3
            CONST value=3
        SEQ
          SEQ
            CJUMP labels=L9,L11
              BINOP op===
                MEM
                  NAME label=_c
                CONST value=3
            LABEL label=L11
            JUMP label=L8
          LABEL label=L8
          SEQ
            EXP
              CONST value=0
          JUMP label=L10
          LABEL label=L9
          SEQ
            EXP
              CONST value=1
          LABEL label=L10
      CONST value=30
    TEMP name=T19
